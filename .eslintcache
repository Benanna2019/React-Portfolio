[{"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/App.js":"1","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/LandingComponent.js":"2","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Home.js":"3","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Navbar.js":"4","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/AboutMe.js":"5","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/reportWebVitals.js":"6","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Lines.js":"7","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Projects.js":"8","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/index.js":"9"},{"size":185,"mtime":1606582167412,"results":"10","hashOfConfig":"11"},{"size":986,"mtime":1606845177932,"results":"12","hashOfConfig":"11"},{"size":916,"mtime":1606852727241,"results":"13","hashOfConfig":"11"},{"size":1596,"mtime":1606853906177,"results":"14","hashOfConfig":"11"},{"size":3125,"mtime":1606852908553,"results":"15","hashOfConfig":"11"},{"size":362,"mtime":1606577688265,"results":"16","hashOfConfig":"11"},{"size":1064,"mtime":1606843319684,"results":"17","hashOfConfig":"11"},{"size":780,"mtime":1606853321910,"results":"18","hashOfConfig":"11"},{"size":500,"mtime":1606577688259,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ycqxg9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/App.js",[],["41","42"],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/LandingComponent.js",["43"],"import React, { useRef, useEffect, useState } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport \"../styles/landingcomp.css\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function LandingComponent() {\n  let intro = useRef(null);\n  useEffect(() => {\n    textIntro(intro);\n  }, []);\n\n  const textIntro = (elem) => {\n    gsap.from(elem, {\n      scrollTrigger: {\n        trigger: elem,\n        toggleActions: \"restart pause resume none\",\n      },\n      xPercent: -20,\n      opacity: 0,\n      stagger: 0.2,\n      duration: 2,\n      delay: 2,\n      scale: -1,\n      ease: \"back\",\n    });\n  };\n  const name = \"Ben Patton\";\n  return (\n    <div className=\"Landing-Container\">\n      <div className=\"text-container\">\n        <h1 className=\"intro\" ref={(el) => (intro = el)}>\n          Hello, I'm<span className=\"highlight\">{name}</span>.\n          <div>I am a full-stack software developer.</div>\n        </h1>\n      </div>\n    </div>\n  );\n}\n","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Home.js",["44","45","46"],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Navbar.js",[],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/AboutMe.js",["47","48","49","50","51"],"import React, { useEffect, useRef } from \"react\";\nimport \"../styles/aboutme.css\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Javascript from \"../images/iconfinder_187_Js_logo_logos_4373213.png\";\nimport Css from \"../images/iconfinder_badge-css-3_317756.png\";\nimport Html from \"../images/iconfinder_badge-html-5_317755.png\";\nimport MySql from \"../images/iconfinder_MySQL_1012821.png\";\nimport Node from \"../images/iconfinder_nodejs-new-black_1012819.png\";\nimport ReactLogo from \"../images/iconfinder_React.js_logo_1174949.png\";\nimport PortfolioPhoto from \"../images/PorfolioPhoto.png\";\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 16,\n  },\n}))(Tooltip);\n\nexport default function AboutMe() {\n  return (\n    <div className=\"Aboutme-Container\">\n      <div className=\"profile-section\">\n        <img className=\"portfolio-photo\" src={PortfolioPhoto} alt=\"Photo\" />\n        <div className=\"profile-text\">\n          <h3>Who am I? </h3>\n          <p>\n            I am a Full-stack Developer in Charleston, South Carolina. I am\n            passionate about designing clean, beautiful websites. Beauty is\n            something we can reflect and cultivate and that is what I long to do\n            as a developer.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"skills-container\">\n        <h1>Programming Skills</h1>\n\n        <div className=\"Aboutme-Content-Container\">\n          <div className=\"card\">\n            <LightTooltip title=\"Html\">\n              <img className=\"Logos html\" src={Html} alt=\"HTML\" />\n              {/* <h2>HTML</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"card\">\n            <LightTooltip title=\"Css\">\n              <img className=\"Logos css\" src={Css} alt=\"CSS\" />\n              {/* <h2>CSS</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"card\">\n            <LightTooltip title=\"Javascript\">\n              <img\n                className=\"Logos javascript\"\n                src={Javascript}\n                alt=\"javascript\"\n              />\n              {/* <h2>Javascript</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"card\">\n            <LightTooltip title=\"React\">\n              <img className=\"Logos react\" src={ReactLogo} alt=\"React Logo\" />\n              {/* <h2>React JS</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"card\">\n            <LightTooltip title=\"Node JS\">\n              <img className=\"Logos node\" src={Node} alt=\"Node Js\" />\n              {/* <h2>Node JS</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"card\">\n            <LightTooltip title=\"MySql - Data Managment\">\n              <img className=\"Logos mysql\" src={MySql} alt=\"My Sql\" />\n            </LightTooltip>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/reportWebVitals.js",[],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Lines.js",["52","53"],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Projects.js",[],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/index.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":36,"nodeType":"60","messageId":"61","endLine":1,"endColumn":44},{"ruleId":"58","severity":1,"message":"62","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"63","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":34},{"ruleId":"58","severity":1,"message":"64","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":16},{"ruleId":"58","severity":1,"message":"62","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"63","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":34},{"ruleId":"58","severity":1,"message":"65","line":3,"column":22,"nodeType":"60","messageId":"61","endLine":3,"endColumn":32},{"ruleId":"58","severity":1,"message":"66","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":27,"column":9,"nodeType":"69","endLine":27,"endColumn":77},{"ruleId":"70","severity":1,"message":"71","line":14,"column":11,"nodeType":"72","endLine":14,"endColumn":37},{"ruleId":"70","severity":1,"message":"73","line":22,"column":6,"nodeType":"74","endLine":22,"endColumn":8,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Projects' is defined but never used.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'drawLine'. Either include it or remove the dependency array.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [drawLine]",{"range":"81","text":"82"},[669,671],"[drawLine]"]