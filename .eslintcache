[{"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/MyProjects.js":"1","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/AboutMe.js":"2","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/App.js":"3","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/LandingComponent.js":"4","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Lines.js":"5","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/reportWebVitals.js":"6","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Navbar.js":"7","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Home.js":"8","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/index.js":"9"},{"size":1327,"mtime":1606866076448,"results":"10","hashOfConfig":"11"},{"size":3123,"mtime":1606856562739,"results":"12","hashOfConfig":"11"},{"size":158,"mtime":1606854816672,"results":"13","hashOfConfig":"11"},{"size":5624,"mtime":1606927933601,"results":"14","hashOfConfig":"11"},{"size":1064,"mtime":1606843319684,"results":"15","hashOfConfig":"11"},{"size":362,"mtime":1606577688265,"results":"16","hashOfConfig":"11"},{"size":1561,"mtime":1606928183463,"results":"17","hashOfConfig":"11"},{"size":502,"mtime":1606918945349,"results":"18","hashOfConfig":"11"},{"size":500,"mtime":1606577688259,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ycqxg9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/MyProjects.js",[],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/AboutMe.js",["43","44","45","46","47"],"import React, { useEffect, useRef } from \"react\";\nimport \"../styles/aboutme.css\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Javascript from \"../images/iconfinder_187_Js_logo_logos_4373213.png\";\nimport Css from \"../images/iconfinder_badge-css-3_317756.png\";\nimport Html from \"../images/iconfinder_badge-html-5_317755.png\";\nimport MySql from \"../images/iconfinder_MySQL_1012821.png\";\nimport Node from \"../images/iconfinder_nodejs-new-black_1012819.png\";\nimport ReactLogo from \"../images/iconfinder_React.js_logo_1174949.png\";\nimport PortfolioPhoto from \"../images/PorfolioPhoto.png\";\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 16,\n  },\n}))(Tooltip);\n\nexport default function AboutMe() {\n  return (\n    <div className=\"Aboutme-Container\">\n      <div className=\"profile-section\">\n        <img className=\"portfolio-photo\" src={PortfolioPhoto} alt=\"Photo\" />\n        <div className=\"profile-text\">\n          <h3>Who am I? </h3>\n          <p>\n            I am a Full-stack Developer in Charleston, South Carolina. I am\n            passionate about designing clean, beautiful websites. Beauty is\n            something we can reflect and cultivate and that is what I long to do\n            as a developer.\n          </p>\n        </div>\n      </div>\n      <div className=\"skills-container\">\n        <h1>Programming Skills</h1>\n        <div className=\"Aboutme-Content-Container\">\n          <div className=\"logo\">\n            <LightTooltip title=\"Html\">\n              <img className=\"Logos html\" src={Html} alt=\"HTML\" />\n              {/* <h2>HTML</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"logo\">\n            <LightTooltip title=\"Css\">\n              <img className=\"Logos css\" src={Css} alt=\"CSS\" />\n              {/* <h2>CSS</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"logo\">\n            <LightTooltip title=\"Javascript\">\n              <img\n                className=\"Logos javascript\"\n                src={Javascript}\n                alt=\"javascript\"\n              />\n              {/* <h2>Javascript</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"logo\">\n            <LightTooltip title=\"React\">\n              <img className=\"Logos react\" src={ReactLogo} alt=\"React Logo\" />\n              {/* <h2>React JS</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"logo\">\n            <LightTooltip title=\"Node JS\">\n              <img className=\"Logos node\" src={Node} alt=\"Node Js\" />\n              {/* <h2>Node JS</h2> */}\n            </LightTooltip>\n          </div>\n          <div className=\"logo\">\n            <LightTooltip title=\"MySql - Data Managment\">\n              <img className=\"Logos mysql\" src={MySql} alt=\"My Sql\" />\n            </LightTooltip>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",["48","49"],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/App.js",[],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/LandingComponent.js",["50"],"import React, { useRef, useEffect, useState } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport \"../styles/landingcomp.css\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function LandingComponent() {\n  let intro = useRef(null);\n  let hover = useRef(null);\n  useEffect(() => {\n    textIntro(intro);\n    warpBackground(hover);\n  }, []);\n\n  const textIntro = (elem) => {\n    gsap.from(elem, {\n      scrollTrigger: {\n        trigger: elem,\n        toggleActions: \"restart pause resume none\",\n      },\n      xPercent: -20,\n      opacity: 0,\n      stagger: 0.2,\n      duration: 2,\n      delay: 3,\n      scale: -1,\n      ease: \"back\",\n    });\n  };\n  const name = \"Ben Patton\";\n\n  //interactive background with gsap\n\n  // Define an object that will be used to draw plus signs\n  const warpBackground = (id) => {\n    let Plus = function () {\n      this.x = 0;\n      this.y = 0;\n\n      this.top = 0;\n      this.left = 0;\n\n      this.height = 0;\n      this.width = 0;\n      this.scale = 1;\n    };\n\n    //Add draw method to the object\n    Plus.prototype.draw = function (ctx, x, y) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setTransform(\n        this.scale,\n        0,\n        0,\n        this.scale,\n        this.left + this.x,\n        this.top + this.y\n      );\n      ctx.lineWidth = 2;\n\n      ctx.moveTo(0, -this.height / 2);\n      ctx.lineTo(0, this.height / 2);\n\n      ctx.moveTo(-this.width / 2, 0);\n      ctx.lineTo(this.width / 2, 0);\n\n      ctx.stroke();\n      ctx.closePath();\n      ctx.restore();\n    };\n\n    let c = document.getElementById(\"c\");\n    let context = c.getContext(\"2d\");\n    let signs = [];\n    let mouse = { x: 0, y: 0 };\n    let gridLength = 9;\n    let mouseOver = false;\n    let mouseMoved = false;\n\n    c.width = window.innerWidth;\n    c.height = window.innerHeight;\n\n    // Create sign grid using 2D array\n    for (let i = 0; i < gridLength; i++) {\n      signs[i] = [];\n      for (let j = 0; j < gridLength; j++) {\n        let min = Math.min(c.width, c.height);\n        signs[i][j] = new Plus();\n        signs[i][j].left = (c.width / (gridLength + 1)) * (i + 1);\n        signs[i][j].top = (c.height / (gridLength + 1)) * (j + 1);\n        signs[i][j].width = min / 50;\n        signs[i][j].height = min / 50;\n      }\n    }\n\n    // Use GSAP ticker to call draw function on every frame that will draw signs to the canvas\n    // You can use requestAnimationFrame as well\n    gsap.ticker.add(draw);\n\n    function draw() {\n      context.clearRect(0, 0, c.width, c.height);\n\n      if (mouseOver && mouseMoved) {\n        calculateSigns();\n        mouseMoved = false;\n      }\n\n      for (let i = 0; i < gridLength; i++) {\n        for (let j = 0; j < gridLength; j++) {\n          let sign = signs[i][j];\n          sign.draw(context);\n        }\n      }\n    }\n\n    function calculateSigns() {\n      for (let i = 0; i < gridLength; i++) {\n        for (let j = 0; j < gridLength; j++) {\n          let sign = signs[i][j];\n          let hyp = Math.min(c.width, c.height) / (gridLength + 1) / 2;\n          let d = dist([sign.left, sign.top], [mouse.x, mouse.y]);\n          let ax = mouse.x - sign.left;\n          let ay = mouse.y - sign.top;\n          let angle = Math.atan2(ay, ax);\n          if (d < hyp + sign.width) {\n            hyp = d;\n            gsap.to(sign, 0.3, { scale: 2 });\n          } else {\n            gsap.to(sign, 0.3, { scale: 1 });\n          }\n\n          gsap.to(sign, 0.3, {\n            x: Math.cos(angle) * hyp,\n            y: Math.sin(angle) * hyp,\n          });\n        }\n      }\n    }\n\n    c.addEventListener(\"mousemove\", mouseMove);\n    c.addEventListener(\"touchmove\", mouseMove);\n\n    function mouseMove(e) {\n      if (e.targetTouches && e.targetTouches[0]) {\n        e = e.targetTouches[0];\n      }\n      let rect = c.getBoundingClientRect();\n      mouse.x = e.clientX - rect.left;\n      mouse.y = e.clientY - rect.top;\n      mouseMoved = true;\n    }\n\n    c.addEventListener(\"mouseenter\", function () {\n      mouseOver = true;\n    });\n\n    c.addEventListener(\"touchstart\", function (e) {\n      mouseOver = true;\n      mouseMove(e);\n    });\n\n    c.addEventListener(\"mouseleave\", mouseLeave);\n    c.addEventListener(\"touchend\", mouseLeave);\n\n    function mouseLeave() {\n      mouseOver = false;\n\n      for (let i = 0; i < gridLength; i++) {\n        for (let j = 0; j < gridLength; j++) {\n          let sign = signs[i][j];\n          if (!mouseOver) {\n            gsap.to(sign, 0.3, { x: 0, y: 0, scale: 1 });\n          }\n        }\n      }\n    }\n\n    window.addEventListener(\"resize\", function () {\n      c.width = window.innerWidth;\n      c.height = window.innerHeight;\n      for (let i = 0; i < gridLength; i++) {\n        for (let j = 0; j < gridLength; j++) {\n          let min = Math.min(c.width, c.height);\n          let sign = signs[i][j];\n          sign.left = (c.width / (gridLength + 1)) * (i + 1);\n          sign.top = (c.height / (gridLength + 1)) * (j + 1);\n          sign.width = min / 50;\n          sign.height = min / 50;\n        }\n      }\n    });\n\n    function dist([x1, y1], [x2, y2]) {\n      let dx = x1 - x2;\n      let dy = y1 - y2;\n      return Math.sqrt(dx * dx + dy * dy) || 1;\n    }\n  };\n\n  return (\n    <div className=\"Landing-Container\">\n      <div className=\"canvas\">\n        <canvas id=\"c\" width=\"500px\" height=\"500px\"></canvas>\n      </div>\n      <div className=\"text-container\">\n        <h1 className=\"intro\" ref={(el) => (intro = el)}>\n          Hello, I'm<span className=\"highlight\">{name}</span>.\n          <div>I am a full-stack software developer.</div>\n        </h1>\n      </div>\n    </div>\n  );\n}\n","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Lines.js",["51","52"],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/reportWebVitals.js",[],["53","54"],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Navbar.js",[],"/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/components/Home.js",["55","56"],"import React, { useEffect, useRef } from \"react\";\nimport LandingComponent from \"./LandingComponent\";\nimport Navbar from \"./Navbar\";\nimport AboutMe from \"./AboutMe\";\n// import Lines from \"./Lines\";\nimport MyProjects from \"./MyProjects\";\n\nexport default function Home() {\n  return (\n    <div>\n      {/* <Lines /> */}\n      <LandingComponent />\n      <Navbar />\n      <AboutMe />\n      <MyProjects />\n      {/* Call To Action */}\n      {/* Coding Challenges */}\n      {/* Contact Me */}\n    </div>\n  );\n}\n","/Users/benjaminpatton/Documents/Coding_Projects/react-portfolio/src/index.js",[],{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"61","line":1,"column":28,"nodeType":"59","messageId":"60","endLine":1,"endColumn":34},{"ruleId":"57","severity":1,"message":"62","line":3,"column":22,"nodeType":"59","messageId":"60","endLine":3,"endColumn":32},{"ruleId":"57","severity":1,"message":"63","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":27,"column":9,"nodeType":"66","endLine":27,"endColumn":77},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"57","severity":1,"message":"71","line":1,"column":36,"nodeType":"59","messageId":"60","endLine":1,"endColumn":44},{"ruleId":"72","severity":1,"message":"73","line":14,"column":11,"nodeType":"74","endLine":14,"endColumn":37},{"ruleId":"72","severity":1,"message":"75","line":22,"column":6,"nodeType":"76","endLine":22,"endColumn":8,"suggestions":"77"},{"ruleId":"67","replacedBy":"78"},{"ruleId":"69","replacedBy":"79"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"61","line":1,"column":28,"nodeType":"59","messageId":"60","endLine":1,"endColumn":34},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'drawLine'. Either include it or remove the dependency array.","ArrayExpression",["82"],["80"],["81"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [drawLine]",{"range":"85","text":"86"},[669,671],"[drawLine]"]